{"version":3,"sources":["Components/Title/Title.js","Components/TextZone/TextZone.js","Components/InputZone/InputZone.js","Components/Main/Main.js","Components/Index/Index.js","App.js","index.js"],"names":["Title","className","TextZone","props","useState","mensajes","setMensajes","alinearMensaje","user_idMensaje","socket","id","marginLeft","marginRight","useEffect","on","msg","document","getElementsByClassName","scrollTop","scrollHeight","nuevoMensaje","map","mensaje","counter","time","Date","timeStamp","horas","getHours","minutos","getMinutes","parseInt","toString","msgTime","style","user_id","usuario","InputZone","setMensaje","submitRef","useRef","inputRef","onSubmit","event","preventDefault","emit","user","username","now","current","value","name","type","onChange","target","autoFocus","ref","autoComplete","Main","valor","Index","setUsername","mostrarError","setMostrarError","mensajeError","setMensajeError","e","length","includes","getUser","display","flexDirection","alignItems","height","justifyContent","marginBottom","color","fontSize","textAlign","width","marginTop","onClick","App","setUser","setSocket","io","socketIOClient","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f34c6342.chunk.js","sourcesContent":["import \"./Title.scss\";\r\nexport const Title = () => (\r\n  <div className=\"title\">\r\n    <h2>Simple chat app</h2>\r\n  </div>\r\n);\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./TextZone.scss\";\r\nexport const TextZone = (props) => {\r\n  const [mensajes, setMensajes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    props.socket?.on(\"nuevoMensaje\", (msg) => {\r\n      setMensajes((mensajes) => [...mensajes, msg]);\r\n      document.getElementsByClassName(\r\n        \"textZone\"\r\n      )[0].scrollTop = document.getElementsByClassName(\r\n        \"textZone\"\r\n      )[0].scrollHeight;\r\n    });\r\n  }, [props.socket]);\r\n  useEffect(() => {\r\n    if (props.nuevoMensaje) {\r\n      setMensajes((mensajes) => [...mensajes, props.nuevoMensaje]);\r\n    }\r\n  }, [props.nuevoMensaje]);\r\n  useEffect(() => {\r\n    document.getElementsByClassName(\r\n      \"textZone\"\r\n    )[0].scrollTop = document.getElementsByClassName(\r\n      \"textZone\"\r\n    )[0].scrollHeight;\r\n  }, [mensajes]);\r\n\r\n  function alinearMensaje(user_idMensaje) {\r\n    if (user_idMensaje === props.socket?.id) {\r\n      return { marginLeft: \"auto\" };\r\n    }\r\n    return { marginRight: \"auto\" };\r\n  }\r\n  return (\r\n    <div className=\"textZone\">\r\n      <ul id=\"lista\">\r\n        {mensajes.map((mensaje, counter) => {\r\n          const time = new Date(mensaje.timeStamp);\r\n          let horas = time.getHours();\r\n          let minutos = time.getMinutes();\r\n          if (parseInt(minutos) < 10) {\r\n            minutos = \"0\" + minutos.toString();\r\n          }\r\n          if (parseInt(horas) < 10) {\r\n            horas = \"0\" + horas.toString();\r\n          }\r\n          const msgTime = horas + \":\" + minutos;\r\n\r\n          return (\r\n            <li key={counter}>\r\n              <div className=\"mensaje\" style={alinearMensaje(mensaje.user_id)}>\r\n                <p className=\"mensajePrincipal\">{mensaje.mensaje}</p>\r\n                <p className=\"timestamp\">{mensaje.usuario + \" \" + msgTime}</p>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import \"./InputZone.scss\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nexport default function InputZone(props) {\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n  const submitRef = useRef();\r\n  const inputRef = useRef();\r\n\r\n  function enviarMensaje(event) {\r\n    event.preventDefault();\r\n    if (mensaje === \"\") return;\r\n    props.socket.emit(\"nuevoMensaje\", {\r\n      mensaje,\r\n      usuario: props.user.username,\r\n      user_id: props.socket?.id,\r\n      timeStamp: Date.now(),\r\n    });\r\n    props.nuevoMensaje({\r\n      mensaje,\r\n      usuario: props.user.username,\r\n      user_id: props.socket?.id,\r\n      timeStamp: Date.now(),\r\n    });\r\n    inputRef.current.value = \"\";\r\n    setMensaje(\"\");\r\n  }\r\n  function handleChange(event) {\r\n    setMensaje(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"inputZone\">\r\n      <form onSubmit={enviarMensaje}>\r\n        <input\r\n          id=\"usermsg\"\r\n          name=\"usermsg\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          autoFocus={true}\r\n          ref={inputRef}\r\n          autoComplete=\"off\"\r\n        />\r\n        <input type=\"submit\" value=\"Send\" ref={submitRef} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import \"./Main.scss\";\r\nimport { Title } from \"../Title/Title\";\r\nimport { TextZone } from \"../TextZone/TextZone\";\r\nimport InputZone from \"../InputZone/InputZone\";\r\nimport { useState } from \"react\";\r\n\r\nconst Main = (props) => {\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n  function nuevoMensaje(valor) {\r\n    setMensaje(valor);\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Title />\r\n      <TextZone socket={props.socket} nuevoMensaje={mensaje} />\r\n      <InputZone\r\n        socket={props.socket}\r\n        user={props.user}\r\n        nuevoMensaje={nuevoMensaje}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Main;\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./Index.scss\";\r\nexport default function Index(props) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [mostrarError, setMostrarError] = useState(\"none\");\r\n  const [mensajeError, setMensajeError] = useState(\"\");\r\n\r\n  function handleChange(e) {\r\n    setUsername(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (username === \"\") {\r\n      setMensajeError(\"Complete el campo para continuar\");\r\n    } else if (username.length > 10 || username.length < 2) {\r\n      setMensajeError(\r\n        \"El nombre de usuario debe contener entre 2 y 10 caracteres\"\r\n      );\r\n    } else if (\r\n      username.includes(\"<\") ||\r\n      username.includes(\">\") ||\r\n      username.includes(\"{\") ||\r\n      username.includes(\"}\") ||\r\n      username.includes(\"[\") ||\r\n      username.includes(\"]\")\r\n    ) {\r\n      setMensajeError(\r\n        \"El nombre de usuario no debe contener carateres especiales\"\r\n      );\r\n    } else {\r\n      props.getUser(username);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (mensajeError) {\r\n      setMostrarError(\"flex\");\r\n    }\r\n  }, [mensajeError]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              height: \"20vh\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <label style={{ marginBottom: \"4vh\" }}>\r\n              Ingrese su nombre de usuario:\r\n            </label>\r\n            <input type=\"text\" onChange={handleChange} autoFocus />\r\n            <br></br>\r\n            <label\r\n              style={{\r\n                color: \"gray\",\r\n                fontSize: \"1vh\",\r\n                textAlign: \"center\",\r\n                width: \"17vh\",\r\n                marginTop: \"1vh\",\r\n              }}\r\n            >\r\n              El nombre de usuario tienen que ser letras y una cantidad de 4 a\r\n              8.\r\n            </label>\r\n          </div>\r\n\r\n          <input type=\"submit\" value=\"Enviar\" />\r\n        </form>\r\n      </div>\r\n      <div className=\"errorDiv\" style={{ display: mostrarError }}>\r\n        <label style={{ display: mostrarError }}>{mensajeError}</label>\r\n        <button\r\n          onClick={() => {\r\n            setMostrarError(\"none\");\r\n            setMensajeError(\"\");\r\n          }}\r\n        ></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Main from \"./Components/Main/Main\";\nimport Index from \"./Components/Index/Index\";\nimport \"./App.scss\";\n\nconst SERVER = \"https://chat-room-server.vercel.app/\";\n\nfunction App() {\n  const [user, setUser] = useState();\n  const [socket, setSocket] = useState();\n\n  useEffect(() => {\n    const io = socketIOClient(SERVER);\n    setSocket(io);\n  }, []);\n  function getUser(username) {\n    setUser({\n      username: username,\n    });\n  }\n\n  useEffect(() => {\n    if (user) {\n      socket.emit(\"usuarioEstablecido\", {\n        usuario: user.username,\n        user_id: socket.id,\n      });\n    } // eslint-disable-next-line\n  }, [user]); // eslint-disable-next-line\n\n  return (\n    <>\n      {user ? (\n        <Main socket={socket} user={user} />\n      ) : (\n        <Index getUser={getUser} />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}